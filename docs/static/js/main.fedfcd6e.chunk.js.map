{"version":3,"sources":["components/AddCategory.js","helpers/GetFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categ","type","value","onChange","target","prototype","PropTypes","func","isRequired","getFetchGifs","category","a","url","encodeURI","fetch","resp","json","data","gif","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGif","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAsB5C,OAEI,sBAAMC,SAhBK,SAACC,GAEhBA,EAAEC,iBAICJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAK,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAQd,SACI,uBACAO,KAAK,OACLC,MAAQT,EACRU,SAxBW,SAACP,GACpBF,EAAcE,EAAEQ,OAAOF,aA6B3BZ,EAAYe,UAAY,CACpBd,cAAee,IAAUC,KAAKC,Y,mCCpCrBC,EAAY,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAElBC,EAFkB,iDAE6BC,UAAWH,GAFxC,+DAGLI,MAAMF,GAHD,cAGlBG,EAHkB,gBAKHA,EAAKC,OALF,uBAKjBC,EALiB,EAKjBA,KAEDC,EAAMD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAExB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZlB,kBAmBjBM,GAnBiB,4CAAH,sDCEZO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,sBAAKc,UAAU,6CAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCLJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAd,SAACA,GAAc,IAAD,EAEXlB,mBAAS,CAC/ByB,KAAM,GACNa,SAAQ,IAJyB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAqBrC,OAdAC,qBAAU,WAENxB,EAAaC,GACRwB,MAAK,SAAAC,GAEFH,EAAS,CACLf,KAAMkB,EACNL,SAAQ,SAKrB,CAACpB,IAEGqB,EDnB2BK,CAAY1B,GAAhCa,EAFuB,EAE7BN,KAAca,EAFe,EAEfA,QAGtB,OACI,qCACA,oBAAIJ,UAAU,oDAAd,SAAoEhB,IACpE,uBAGEoB,GAAW,mBAAGJ,UAAU,mCAAb,yBAEb,qBAAKA,UAAU,YAAf,SACKH,EAAOJ,KAAI,SAAAC,GAAG,OACX,wBAAC,EAAD,2BAAkBA,GAAlB,IAAwBiB,IAAMjB,EAAIC,WAG1C,2BElBKiB,EAAe,WAAO,IAAD,EAEE9C,mBAAS,CAAC,eAFZ,mBAE3B+C,EAF2B,KAEfhD,EAFe,KAI9B,OACI,qCACI,sBAAKmC,UAAU,MAAf,UACI,gDACA,cAAC,EAAD,CAAanC,cAAgBA,OAEjC,sBAAKmC,UAAU,iBAAf,UACI,uBACA,qBAAKA,UAAU,QAAf,SACI,6BACKa,EAAWpB,KAAI,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,iB,MCdtC8B,IAASC,OAEP,cAAC,EAAD,IAGAC,SAASC,eAAe,W","file":"static/js/main.fedfcd6e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\nconst [inputValue, setinputValue] = useState('');\r\n\r\nconst hadleInputChange=(e)=>{\r\n    setinputValue(e.target.value);\r\n}\r\n\r\nconst hadleSumit = (e)=>{\r\n    //Para evitar que se recargue la página tras el sumit del form\r\n    e.preventDefault();\r\n    //Recibir la nueva categoría por props\r\n    //Añadir la nueva categ al array inicial de categories\r\n\r\n    if(inputValue.trim().length > 2) {\r\n        setCategories(categ => [inputValue, ...categ] );\r\n        setinputValue('');\r\n    }\r\n    \r\n    \r\n}\r\n\r\n    return (\r\n        \r\n        <form onSubmit={ hadleSumit } >\r\n            <input \r\n            type=\"text\"\r\n            value={ inputValue }\r\n            onChange={ hadleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.prototype = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n  //PETICIÓN HTTP\r\nexport const getFetchGifs = async(category) => {\r\n\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=10&api_key=rCwpFMVWw4DDuxWmSqeeaaNzp3MBMpC3`;\r\n    const resp = await fetch(url);\r\n    //Interesa la data.data\r\n    const {data} = await resp.json();\r\n\r\n    const gif = data.map(img => {\r\n\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    }) \r\n\r\n    // console.log('gif',gif);\r\n    // setImages(gif);\r\n\r\n    return gif;\r\n}\r\n","import React from 'react'\r\n\r\n\r\n//Propiedades de las img enviadas por props y destructuradas\r\nexport const GifGridItem = ( {title, url} ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInLeft\">\r\n            <img src={ url } alt={ title }></img>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGif } from '../hooks/useFetchGif';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data: images, loading } = useFetchGif(category);\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__bounceIn text-category\">{ category }</h3>\r\n        <hr/>\r\n        {/* Si es true aparece el loadin, si no, no hace nada */}\r\n\r\n        { loading && <p className=\"animate__animated animate__flash\">Cargando...</p> }\r\n\r\n        <div className=\"card-grid\">\r\n            {images.map(img => (\r\n                <GifGridItem { ...img } key={ img.id }/>\r\n            ))}\r\n        </div>\r\n        <hr/>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getFetchGifs } from \"../helpers/GetFetchGifs\";\r\n\r\n//CUSTOM HOOK\r\nexport const useFetchGif = (category) => {\r\n    \r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getFetchGifs(category)\r\n            .then(imgs => {\r\n\r\n                setstate({\r\n                    data: imgs,\r\n                    loading:false\r\n                });\r\n\r\n            });\r\n\r\n    }, [category])\r\n\r\n    return state; //state = {data: [], loading:true}\r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\nconst [categories, setCategories] = useState(['Tokyo Goul'])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"nav\">\r\n                <h2>Gif Expert App</h2>\r\n                <AddCategory setCategories={ setCategories }/>  \r\n            </div>\r\n            <div className=\"card-container\">\r\n                <hr/>\r\n                <div className=\"cards\">\r\n                    <ol>\r\n                        {categories.map(category => \r\n                            <GifGrid \r\n                                key={ category } \r\n                                category={ category }\r\n                            />\r\n                        )}\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  \n  <GifExpertApp />,\n  \n  \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}